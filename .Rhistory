transmute(course_code = sdc_tdoe_course_code, student_id = student_tdoe_id, exam_score = as.numeric(sdc_exam_score),
exam_cut_score = sdc_exam_cut_score, exam_result = sdc_exam_result, system = district_tdoe_id),
# 2017-18
readxl::read_excel(str_c(getwd(), "Assessment_Data Returns/Statewide Dual Credit Challenge/",
year(today()) - 2, "-", str_sub(year(today()) - 1, -2, -1),
"/SDC Exam Scores - F2017 and S2018.xlsx")) %>%
janitor::clean_names() %>%
transmute(course_code, student_id, exam_score, exam_cut_score, exam_result, system = district_number),
# 2018-19
read_dta(str_c(getwd(), "Assessment_Data Returns/Statewide Dual Credit Challenge/",
year(today()) - 1, "-", str_sub(year(today()), -2, -1),
"/20190206_SDC_Exam_Score_Fall_SY2018-2019_Whalen_v2.dta")) %>%
janitor::clean_names() %>%
transmute(course_code, student_id, exam_score, exam_cut_score, exam_result, system = district)
)
exams
filter(exams, system == 680 & between(course_code, 6433, 6434))
filter(exams, system == 680 & between(course_code, 6433, 6434)) %>% inner_join(cohort, by = c("student_id" = "student_key"))
list.files("N:/ORP_accountability/projects")
list.files("N:/ORP_accountability/projects/2018_student_level_file")
sl = read_csv("N:/ORP_accountability/projects/2018_student_level_file/2018_student_level_file.csv")
source('~/Projects/ECON 6110/Assignments/Assignment 2/assignment2.R')
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F) %>%
# Explore data
head(gold)
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F) %>%
# Explore data
gold
# Explore data
head(gold)
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F)
plot(gold)
# Explore data
head(gold)
plot(gold)
filter(gold)
help(getSymbols)
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F, from = today() - dyears(3))
gold
head(gold)
nrow(gold)
today() - dyears(3)
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F,
from = today() - dyears(3) to = today())
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F,
from = today() - dyears(3), to = today())
head(gold)
tail(gold)
gold[1:100]
index(gold)
plot(gold[as.Date(index(gold)) >= today() - dyears(3)])
# Explore data
head(gold)
plot(gold)
plot(gold[as.Date(index(gold)) >= today() - dyears(3)])
ggplot(aes(x = as.Date(index(gold)), y = gold$GOLDPMGBD228NLBM)) +
geom_line()
ggplot(data = NULL, aes(x = as.Date(index(gold)), y = gold$GOLDPMGBD228NLBM)) +
geom_line()
ggplot(
data = NULL,
aes(
x = ymd(index(gold)),
y = gold$GOLDPMGBD228NLBM
)
) +
geom_line()
ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)]
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)),
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM
)
) +
geom_line()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)),
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)), y = gold$GOLDPMGBD228NLBM
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)), y = gold$GOLDPMGBD228NLBM
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line() +
scale_x_continuous(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)]
gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)), y = gold$GOLDPMGBD228NLBM
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line() +
# scale_x_continuous(name = "Time") +
# scale_y_continuous(name = "Gold Price") +
theme_bw()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)), y = gold$GOLDPMGBD228NLBM
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line() +
scale_x_datetime(name = "Time") +
scale_y_datetime(name = "Gold Price") +
theme_bw()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)), y = gold$GOLDPMGBD228NLBM
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line() +
scale_x_datetime(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold)), y = gold$GOLDPMGBD228NLBM
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line() +
scale_x_date(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
# Fit model
auto.arima(gold)
help(arima)
# Test model fit
arima(gold, order = c(0, 1, 1))
source('~/Projects/ECON 6110/Assignments/Assignment 2/assignment2.R')
model = arima(gold, order = c(0, 1, 1))
# Test model fit
acf(model)
?acf
acf(gold)
sum(is.na(gold$GOLDPMGBD228NLBM))
View(gold)
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F)
ggplot(
data = NULL,
aes(
x = ymd(index(gold))[!is.na(gold$GOLDPMGBD228NLBM)],
y = gold$GOLDPMGBD228NLBM[!is.na(gold$GOLDPMGBD228NLBM)]
# x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3)],
# y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3)]
)
) +
geom_line() +
scale_x_date(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold))[!is.na(gold$GOLDPMGBD228NLBM)],
# y = gold$GOLDPMGBD228NLBM[!is.na(gold$GOLDPMGBD228NLBM)]
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)]
)
) +
geom_line() +
scale_x_date(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
# Fit model
# Auto ARIMAs
auto.arima(gold[!is.na(gold$GOLDPMGBD228NLBM)])
auto.arima(gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)])
gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)])
gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)]
nrow(gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)])
nrow(gold[!is.na(gold$GOLDPMGBD228NLBM)])
nrow(gold)
sum(is.na(gold$GOLDPMGBD228NLBM) - nrow(gold[!is.na(gold$GOLDPMGBD228NLBM)])
)
nrow(gold) - sum(is.na(gold$GOLDPMGBD228NLBM))
# Fit model
# Auto ARIMAs
auto.arima(gold[!is.na(gold$GOLDPMGBD228NLBM)])
auto.arima(gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)]) #
# Model over last forty years
arima(gold[!is.na(gold$GOLDPMGBD228NLBM)], order = c(1,1,2))
# Model over last three years
model2 = arima(gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)])
summary(model1)
# Model over last forty years
model1 = arima(gold[!is.na(gold$GOLDPMGBD228NLBM)], order = c(1,1,2))
summary(model1)
acf(model1)
acf(gold[!is.na(gold$GOLDPMGBD228NLBM)])
pacf(gold[!is.na(gold$GOLDPMGBD228NLBM)])
help("auto.arima")
??tsclean
# Data
gold = getSymbols("GOLDPMGBD228NLBM", src = "FRED", auto.assign = F) %>%
filter(!is.na(GOLDPMGBD228NLBM))
adf.test(gold)()
adf.test(gold)(
adf.test(gold)
adf.test(gold)
??adf.test
library(tseries)
library(tseries)
adf.test(gold)
adf.test(gold[!is.na(gold$GOLDPMGBD228NLBM)])
plot(model1$residuals)
plot(model2$residuals)
tsclean(gold)
auto.arima(tsclean(gold))
auto.arima(tsclean(gold))
plot(tsclean(gold))
plot(gold)
plot(stl(gold))
plot(stl(tsclean(gold)))
plot(stl(tsclean(gold), window = "periodic"))
plot(stl(tsclean(gold), s.window = "periodic"))
stl(gold)
stl(tsclean(gold))
stl(tsclean(gold), s.window = "periodic")
?adf.test
# Test model fit
adf.test(gold[!is.na(gold)], alternative = "stationary")
# Autocorrelation function
acf(gold[!is.na(gold)])
acf(gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)])
# Partial autocorrelation function
pacf(gold[!is.na(gold)])
pacf(gold[!is.na(gold$GOLDPMGBD228NLBM) & ymd(index(gold)) >= today() - dyears(3)])
adf.test(diff(gold[!is.na(gold)], differences = 1), alternative = "stationary")
diff(gold, differences = 1)
diff(gold, differences = 1) %>% head()
adf.test(na.omit(diff(gold, differences = 1)), alternative = "stationary")
# Autocorrelation function
acf(gold[!is.na(gold)])
acf(na.omit(gold))
# Partial autocorrelation function
pacf(na.omit(gold))
# Fit model
# Auto ARIMAs
auto.arima(na.omit(gold)) # ARIMA(1,1,2)
auto.arima(tsclean(gold))
# Model over last forty years
model1 = arima(na.omit(gold), order = c(1,1,2))
acf(model1)
acf(na.omit(model1))
Acf(model1)
model1$code
model1$series
acf(diff(na.omit(gold)))
acf(na.omit(diff(gold, differences = 1)))
acf(na.omit(diff(gold[ymd(index(gold)) >= today() - dyears(3)], differences = 1)))
# Test model fit
tsdisplay(residuals(model1), lag.max=45)#, main='(1,1,1) Model Residuals')
?tsdisplay
tsdisplay(model1$residuals)
tsdisplay(resid(model1))
plot(model1$residuals)
plot(model2$residuals)
index(na.omit(gold))
ymd(index(na.omit(gold)))
# Test model fit
# Plot residuals
ggplot(
data = NULL,
aes(
x = ymd(index(na.omit(gold))),
y = model1$residuals
)
)
model1$residuals
plot(model1$residuals)
plot.new()
# Test model fit
# Plot residuals
ggplot(
data = NULL,
aes(
x = ymd(index(na.omit(gold))),
y = model1$residuals
)
) +
geom_point()
# Test model fit
# Plot residuals
ggplot(
aes(
x = ymd(index(na.omit(gold))),
y = model1$residuals
)
) +
geom_point()
# Test model fit
# Plot residuals
ggplot(
data = data.frame(),
aes(
x = ymd(index(na.omit(gold))),
y = model1$residuals
)
) +
geom_point()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold))[!is.na(gold$GOLDPMGBD228NLBM)],
# y = gold$GOLDPMGBD228NLBM[!is.na(gold$GOLDPMGBD228NLBM)]
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)]
)
) +
geom_line() +
scale_x_date(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
ggplot(
data = NULL,
aes(
# x = ymd(index(gold))[!is.na(gold$GOLDPMGBD228NLBM)],
# y = gold$GOLDPMGBD228NLBM[!is.na(gold$GOLDPMGBD228NLBM)]
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)]
)
) +
geom_line() +
scale_x_date(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
source('~/Projects/ECON 6110/Assignments/Assignment 2/assignment2.R')
plot(gold[ymd(index(gold)) >= today() - dyears(3)])
# Plot data
head(gold)
plot(gold)
rm(list = ls())
source('~/Projects/ECON 6110/Assignments/Assignment 2/assignment2.R')
ggplot(
data = NULL,
aes(
# x = ymd(index(gold))[!is.na(gold$GOLDPMGBD228NLBM)],
# y = gold$GOLDPMGBD228NLBM[!is.na(gold$GOLDPMGBD228NLBM)]
x = ymd(index(gold))[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)],
y = gold$GOLDPMGBD228NLBM[ymd(index(gold)) >= today() - dyears(3) & !is.na(gold$GOLDPMGBD228NLBM)]
)
) +
geom_line() +
scale_x_date(name = "Time") +
scale_y_continuous(name = "Gold Price") +
theme_bw()
# Test model fit
# Plot residuals
ggplot(
data = NULL,
aes(
x = ymd(index(na.omit(gold))),
y = model1$residuals
)
) +
geom_point()
# Test model fit
# Plot residuals
ggplot(
data = NULL,
aes(
x = ymd(index(na.omit(gold))),
y = model1$residuals
)
) +
geom_point(aes(alpha = 0.2))
gold[ymd(index(gold)) >= today() - dyears(3)]
# Test model fit
# Plot residuals
ggplot(
data = NULL,
aes(
x = ymd(index(na.omit(gold[ymd(index(gold)) >= today() - dyears(3)]))), y = model2$residuals
# x = ymd(index(na.omit(gold))), y = model1$residuals
)
) +
geom_point(aes(alpha = 0.1))
predict(model1)
model1$pred
forecast(model1)
forecast(model1, h = 10)
# Predict average price of gold for the week of March 4-8
# Plot predictions
ggplot(
data = NULL,
aes(
x = ymd(index(na.omit(gold[ymd(index(gold)) >= today() - dyears(3)]))), y = model2$residuals
# x = ymd(index(na.omit(gold))), y = model1$residuals
)
) +
geom_point(aes(alpha = 0.1))
model1$series
forecast(model1, h = 10) %>% View()
forecast(model1, h = 10)$x
tail(forecast(model1, h = 10)$x)
tail(forecase(model1)$x)
tail(forecast(model1)$x)
forecast(model1)
index(forecast(model1))
# acf
# pacf
# boxjenkins
# Replot model with predictions
gpglot(
data = NULL,
aes(
x = ymd(index(na.omit(gold))), y = na.omit(gold$GOLDPMGBD228NLBM)
)
) +
geom_line() +
geom_line(
data = NULL,
aes(
x = index(forecast(model1)),
y = tail(forecast(model1)$x)
)
)
# acf
# pacf
# boxjenkins
# Replot model with predictions
gpglot(
data = NULL,
aes(
x = ymd(index(na.omit(gold))), y = na.omit(gold$GOLDPMGBD228NLBM)
)
) +
geom_line() +
geom_line(
data = NULL,
aes(
x = index(forecast(model1)),
y = tail(forecast(model1)$x)
)
)
# acf
# pacf
# boxjenkins
# Replot model with predictions
ggplot(
data = NULL,
aes(
x = ymd(index(na.omit(gold))), y = na.omit(gold$GOLDPMGBD228NLBM)
)
) +
geom_line() +
geom_line(
data = NULL,
aes(
x = index(forecast(model1)),
y = tail(forecast(model1)$x)
)
)
forecast(model1)
# Predict average price of gold for the week of March 4-8
# Plot predictions
plot(forecast(model1))
# Predict average price of gold for the week of March 4-8
# Plot predictions
plot(forecast(model1), h = 1000)
# Predict average price of gold for the week of March 4-8
# Plot predictions
plot(forecast(model1, h = 1000))
# Predict average price of gold for the week of March 4-8
# Plot predictions
plot(forecast(model2, h = 100))
forecast(model2)
forecast(model2, h = 10)
predict(model2)
predict(model2)$pred
